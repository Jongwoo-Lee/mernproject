imp¡æ	import moduleName from 'module'
imr¡æ	import React from 'react'
imd¡æ	import { destructuredModule } from 'module'
edf¡æ	export default (params) => { }
met¡æ	methodName = (params) => { }


ptfr¡æ	PropTypes.func.isRequired
ptor¡æ	PropTypes.object.isRequired
ptsr¡æ	PropTypes.string.isRequired

rconst¡æconstructor(props) with this.state

rcc

import React, { Component } from 'react'

export default class $1 extends Component {
  render() {
    return <div>$2</div>
  }
}


rce

import React, { Component } from 'react'

export class $1 extends Component {
  render() {
    return <div>$2</div>
  }
}

export default $1


rfe

import React from 'react'

const $1 = props => {
  return <div>$0</div>
}


rcredux

import React, { Component } from 'react'
import PropTypes from 'prop-types'
import { connect } from 'react-redux'

export class $1 extends Component {
  static propTypes = {
    $2: $3,
  }

  render() {
    return <div>$4</div>
  }
}

const mapStateToProps = state => ({})

const mapDispatchToProps = {}

export default connect(mapStateToProps, mapDispatchToProps)($1)
